//VISTA

//Notes
Copyright (c) 2019 by RightSource Compliance, LLC
  NAME
    rs_SantaCruz_HAP_contract_cover_letter_RSC.txt
  DESCRIPTION
    This will print a HAP contract cover letter, with the version depending on an end user selection.
  NOTES
    User defined functions
      - fn_uf_getworkingday_15_RSC > gets 15 days out, excluding weekends
        - TODO: ADD HOLIDAY HANDLING
    User defined tables
      - none
  MODIFIED
    2019-06-19 - Erik Bredesen (RSC) - created FillDoc
    2019-06-28 - Erik Bredesen (RSC) - merge letter options so both generate every time; add dynamic verbiage for new landlords
                                       and required lease copy switches; add HAP contract lookup and tokens
    2019-07-01 - Erik Bredesen (RSC) - added householdMembers and utilResponsibility DETAIL sections
    2019-07-02 - Erik Bredesen (RSC) - renamed for deployment to Live
//End Notes

//VERSION
1.0 (Last Modified - 2019-07-02)
//END VERSION

//DATABASE
FILLDOCS
//END DATABASE

//TITLE
HCH - HAP Cover Letter
//END TITLE

//SELECT Primary
select
'y_HAP_contract_cover_letter_landlord_RSC.docx'                         _FILE_,
'y_HAP_contract_cover_letter_tenant_RSC.docx'                           _FILE_1,
'householdMembers'                                                      _DETAIL_householdMembers,
'utilResp'                                                              _DETAIL_utilResp,
'ApplResp'                                                              _DETAIL_ApplResp,

/* HEADER/FOOTER TOKENS */
'\\asp1\bfs\busersdefpaths\Housing Authority of t 85430\Live\Reports\header_image.jpg'
                                                                        headerImage,
rsc.chairperson                                                         chairperson,
rsc.viceChairperson                                                     viceChairperson,
rsc.boardmember1                                                        boardmember1,
rsc.boardmember2                                                        boardmember2,
rsc.boardmember3                                                        boardmember3,
rsc.boardmember4                                                        boardmember4,
rsc.boardmember5                                                        boardmember5,
rsc.execDirector                                                        execDirector,

/* DATE/TIME TOKENS */
getdate()                                                               today,
dbo.fn_uf_getworkingday_15_RSC(getdate())                               dueDate,
isnull(h8.dteffective2b,t.dtleasefrom)                                  termStartDate,
'#termEndDate#'                                                         termEndDate,
'#termLength#' + ' Months'                                              termLength,

/* LANDLORD INFO TOKENS */
v.ulastname                                                             landlordName,
pr.saddr1 + ' ' + CASE
                    WHEN pr.saddr2 = null THEN ''
                    WHEN pr.saddr2 = '' THEN ''
                    ELSE ' ' + pr.saddr2
                  END + '^' + pr.scity + ', ' + pr.sstate + ' ' + pr.szipcode
                                                                        landlordFullAddr,

/* ADDITIONAL LETTER VERBIAGE TOKENS */
CASE '#copyLease#'
  WHEN 'Yes' THEN 'Provide, signed copy of the lease with the proposed tenant (this is your lease/rental agreement - not provided by the Housing Authority).'
  ELSE ''
END                                                                     copyLeaseReq,
CASE '#copyLease#'
  WHEN 'Yes' THEN '•     The lease between the tenant and the landlord must reference HUD Tenancy Addendum - required wording: "HUD Tenancy Addendum is incorporated in this lease".'
  ELSE ''
END                                                                     copyLeaseReqA,
CASE '#newLandlord#'
  WHEN 'Yes' THEN 'If this is the first time you have worked with the Housing Authority as a landlord, provide a copy of W-9 Form.'
  ELSE ''
END                                                                     newLandlordTextA,
CASE '#newLandlord#'
  WHEN 'Yes' THEN '•     Complete Page 1 of W-9 Form, as per instructions on pages 2-3 of this form.'
  ELSE ''
END                                                                     newLandlordTextB,
CASE '#newLandlord#'
  WHEN 'Yes' THEN '•     Sign and date Page 1 of W-9 Form, certifying the accuracy of information provided.'
  ELSE ''
END                                                                     newLandlordTextC,
CASE '#option#'
  WHEN 'A' THEN 'HAP Contract Summary'
  WHEN 'B' THEN 'USDA-RD Farm Housing Summary'
  WHEN 'C' THEN 'Merrill Road Lease Agreement Summary'
END                                                                     letterTitle,
CASE '#option#'
  WHEN 'A' THEN 'Please note that your lease also incorporates the HUD Tenancy Addendum, which has been attached for your records.'
  ELSE ''
END                                                                     option2A,

/* TENANT INFO TOKENS */
t.sfirstname + ' ' + CASE
                      WHEN t.smiddlename is null THEN ''
                      WHEN t.smiddlename = '' THEN ''
                      ELSE t.smiddlename + ' '
                     END + t.slastname                                  tenantName,
CASE
  WHEN t.saddr1 != a.saddr1 THEN t.saddr1 + ' ' + CASE
                                                    WHEN t.saddr2 = '' THEN ''
                                                    WHEN t.saddr2 is null THEN ''
                                                    ELSE t.saddr2
                                                  END + '^' + t.scity + ', ' + t.sstate + ' ' + t.szipcode
  ELSE a.saddr1 + ' ' + CASE
                          WHEN a.saddr2 = '' THEN ''
                          WHEN a.saddr2 is null THEN ''
                          ELSE a.saddr2
                        END + '^' + a.scity + ', ' + a.sstate + ' ' + a.szipcode
END                                                                     resMailingAddr,
CASE
  WHEN t.saddr1 != a.saddr1 THEN t.saddr1 + ' ' + CASE
                                                    WHEN t.saddr2 = '' THEN ''
                                                    WHEN t.saddr2 is null THEN ''
                                                    ELSE t.saddr2 + ' '
                                                  END + t.scity + ', ' + t.sstate + ' ' + t.szipcode
  ELSE a.saddr1 + ' ' + CASE
                          WHEN a.saddr2 = '' THEN ''
                          WHEN a.saddr2 is null THEN ''
                          ELSE a.saddr2 + ' '
                        END + a.scity + ', ' + a.sstate + ' ' + a.szipcode
END                                                                     inlineResMailingAddr,

/* UNIT INFO TOKENS */
a.saddr1 + ' ' + CASE
                    WHEN a.saddr2 = '' THEN ''
                    WHEN a.saddr2 is null THEN ''
                    ELSE a.saddr2 + ' '
                  END + a.scity + ', ' + a.sstate + ' ' + a.szipcode
                                                                        unitFullAddr,

/* CERT INFO TOKENS */
Case h8.sProgram1d
       When 'P' Then 0
       When 'CE' Then (Case C.bFullSubsidy When 0 Then Isnull(Convert(Numeric(21),C.dOwnProHAP11an), 0)
                                           Else Isnull(Convert(Numeric(21), C.dOwnHAP11t), 0)
                       End)
       When 'PV' Then (Case C.bFullSubsidy When 0 Then Isnull(Convert(Numeric(21),C.dOwnProHAP11an), 0)
                                           Else Isnull(Convert(Numeric(21), C.dOwnHAP11t), 0)
                       End)
       When 'VO' Then (Case Vo.bFullSubsidy When 0 Then Isnull(Convert(Numeric(21),Vo.dOwnProHAP12ak), 0)
                                           Else Isnull(Convert(Numeric(21), Vo.dOwnHAP12w), 0)
                       End)
       When 'MR' Then (Case M.bFullSubsidy When 0 Then Isnull(Convert(Numeric(21),M.dOwnProHAP13z), 0)
                                           Else Isnull(Convert(Numeric(21), M.dOwnHAP13m), 0)
                       End)
       When 'H' Then (Case H.bFullSubsidy When 0 Then Isnull(Convert(Numeric(21),H.dProHAP15ae), 0)
                                          Else Isnull(Convert(Numeric(21),H.dHAP15r), 0)
                      End)
End                                                                     totalHAP,
Case h8.Sprogram1d
       When 'P' Then (Case Pu.sRentType When 'F' Then Isnull(Convert(Numeric(21), Pu.dFlatRent), 0)
                                       Else (Case Pu.bFullSubsidy When 0 Then Isnull(Convert(Numeric(21), Pu.dMixedTR10s), 0)
                                                                 Else Isnull(Convert(Numeric(21), Pu.dTR10e), 0)
                                             End)
                      End)
       When 'CE' Then (Case C.bFullSubsidy When 0 Then Isnull(Convert(Numeric(21), C.dMixedTR11ak), 0)
                                           Else Isnull(Convert(Numeric(21), C.dTR11s), 0)
                       End)
       When 'PV' Then (Case C.bFullSubsidy When 0 Then Isnull(Convert(Numeric(21), C.dMixedTR11ak), 0)
                                           Else Isnull(Convert(Numeric(21), C.dTR11s), 0)
                       End)
       When 'VO' Then (Case Vo.bFullSubsidy When 0 Then Isnull(Convert(Numeric(21), Vo.dMixedTR12ai), 0)
                                           Else Isnull(Convert(Numeric(21), Vo.dFamRent12x), 0)
                       End)
       When 'MR' Then (Case M.bFullSubsidy When 0 Then Isnull(Convert(Numeric(21), M.dMixedTR13x), 0)
                                           Else Isnull(Convert(Numeric(21), M.dTR13k), 0)
                       End)
       When 'H' Then (Case H.bFullSubsidy When 0 Then Isnull(Convert(Numeric(21), H.dMixedTS15af), 0)
                                          Else Isnull(Convert(Numeric(21), H.dTS15s), 0)
                      End)
End                                                                     totalTenantRent,
Case h8.Sprogram1d
       When 'P' Then (Case Pu.sRentType When 'F' Then Isnull(Convert(Numeric(21), Pu.dFlatRent), 0)
                                       Else (Case Pu.bFullSubsidy When 0 Then Isnull(Convert(Numeric(21), Pu.dMixedTR10s), 0)
                                                                 Else Isnull(Convert(Numeric(21), Pu.dTR10e), 0)
                                             End)
                      End)
       When 'CE' Then (Case C.bFullSubsidy When 0 Then Isnull(Convert(Numeric(21), C.dMixedTR11ak), 0)
                                           Else Isnull(Convert(Numeric(21), C.dTR11s), 0)
                       End)
       When 'PV' Then (Case C.bFullSubsidy When 0 Then Isnull(Convert(Numeric(21), C.dMixedTR11ak), 0)
                                           Else Isnull(Convert(Numeric(21), C.dTR11s), 0)
                       End)
       When 'VO' Then (Case Vo.bFullSubsidy When 0 Then Isnull(Convert(Numeric(21), Vo.dMixedTR12ai), 0)
                                           Else Isnull(Convert(Numeric(21), Vo.dFamRent12x), 0)
                       End)
       When 'MR' Then (Case M.bFullSubsidy When 0 Then Isnull(Convert(Numeric(21), M.dMixedTR13x), 0)
                                           Else Isnull(Convert(Numeric(21), M.dTR13k), 0)
                       End)
       When 'H' Then (Case H.bFullSubsidy When 0 Then Isnull(Convert(Numeric(21), H.dMixedTS15af), 0)
                                          Else Isnull(Convert(Numeric(21), H.dTS15s), 0)
                      End)
End + Case h8.sProgram1d
         When 'P' Then 0
         When 'CE' Then (Case C.bFullSubsidy When 0 Then Isnull(Convert(Numeric(21),C.dOwnProHAP11an), 0)
                                             Else Isnull(Convert(Numeric(21), C.dOwnHAP11t), 0)
                         End)
         When 'PV' Then (Case C.bFullSubsidy When 0 Then Isnull(Convert(Numeric(21),C.dOwnProHAP11an), 0)
                                             Else Isnull(Convert(Numeric(21), C.dOwnHAP11t), 0)
                         End)
         When 'VO' Then (Case Vo.bFullSubsidy When 0 Then Isnull(Convert(Numeric(21),Vo.dOwnProHAP12ak), 0)
                                             Else Isnull(Convert(Numeric(21), Vo.dOwnHAP12w), 0)
                         End)
         When 'MR' Then (Case M.bFullSubsidy When 0 Then Isnull(Convert(Numeric(21),M.dOwnProHAP13z), 0)
                                             Else Isnull(Convert(Numeric(21), M.dOwnHAP13m), 0)
                         End)
         When 'H' Then (Case H.bFullSubsidy When 0 Then Isnull(Convert(Numeric(21),H.dProHAP15ae), 0)
                                            Else Isnull(Convert(Numeric(21),H.dHAP15r), 0)
                        End)
      END                                                               totalRentToOwner,

h8.hMy                                                                  _key_

from property p
inner join unit u on u.hproperty = p.hmy
inner join addr a on a.hpointer = u.hmy and a.itype = 4
inner join tenant t on t.hunit = u.hmy
left join h8summ h8 on h8.htenant = t.hmyperson
left join vendor v on v.hmyperson = h8.hvendor
left join person pr on pr.hmy = v.hmyperson
  /* PHA cert type joins */
  Left Join H8Public Pu On h8.hMy = Pu.hSum
  Left Join H8Vouch Vo On h8.hMy = Vo.hSum
  Left Join H8Certif C On h8.hMy = C.hSum
  Left Join H8ModReh M On h8.hMy = M.hSum
  Left Join H8HomeOwnership H On h8.hMy = H.hSum
cross join board_commishes_footer_RSC rsc
where isnull(h8.hmy,-99) = isnull((select top 1 hmy from h8summ where htenant = t.hmyperson and bMasterRecd = -1 order by dteffective2b desc),-99)
#conditions#
//END SELECT


//DETAIL householdMembers 8
SELECT
rTrim(F.sFirstName) + ' ' + CASE
                              WHEN rTrim(lTrim(F.sMI)) is null THEN ''
                              WHEN rTrim(lTrim(F.sMI)) = '' THEN ''
                              ELSE rTrim(lTrim(F.sMI)) + ' '
                            END + rTrim(F.sLastName)           householdMember,
f.imembernum
FROM H8Family F, H8Summ S, Tenant T, Unit U, Property PR
WHERE F.hSum = S.hMy
  AND S.hTenant = T.hMyPerson
  AND T.hUnit = U.hMy
  AND U.hProperty = PR.hMy
  and isnull(F.hSum,-99) = #key#
ORDER BY F.iMemberNum
//END DETAIL householdMembers


//DETAIL utilResp 8
WITH utilResponsibility (utiltype,utilresp)
AS (
SELECT Distinct
us.sdesc,
CASE
    WHEN us.sdesc like 'Water %' THEN 'Hot Water - ' + CASE
                                                      WHEN R.bTenant = -1 THEN 'T'
                                                      WHEN R.bOwner = -1 THEN 'O'
                                                      WHEN isnull(R.bTenant,R.bOwner) is null THEN 'NOT ASSIGNED'
                                                      ELSE 'testing'
                                                    END
    WHEN us.scode = 'Water' THEN 'Water - ' + CASE
                                                      WHEN R.bTenant = -1 THEN 'T'
                                                      WHEN R.bOwner = -1 THEN 'O'
                                                      WHEN isnull(R.bTenant,R.bOwner) is null THEN 'NOT ASSIGNED'
                                                      ELSE 'testing'
                                                    END
    WHEN us.scode = 'Sewer' THEN 'Sewer - ' + CASE
                                                      WHEN R.bTenant = -1 THEN 'T'
                                                      WHEN R.bOwner = -1 THEN 'O'
                                                      WHEN isnull(R.bTenant,R.bOwner) is null THEN 'NOT ASSIGNED'
                                                      ELSE 'testing'
                                                    END
    WHEN us.scode = 'Garbage' THEN 'Garbage - ' + CASE
                                                      WHEN R.bTenant = -1 THEN 'T'
                                                      WHEN R.bOwner = -1 THEN 'O'
                                                      WHEN isnull(R.bTenant,R.bOwner) is null THEN 'NOT ASSIGNED'
                                                      ELSE 'testing'
                                                    END
                                                    else us.sdesc + ' - ' +CASE
                                                      WHEN R.bTenant = -1 THEN 'T'
                                                      WHEN R.bOwner = -1 THEN 'O'
                                                      WHEN isnull(R.bTenant,R.bOwner) is null THEN 'NOT ASSIGNED'
                                                      ELSE 'testing'
                                                    END
  END utilResp
FROM Property PR
     INNER JOIN Unit U ON U.hProperty = PR.hMy
     INNER JOIN H8Unit H8U ON H8U.hUnit = U.hMy
     INNER JOIN Tenant T ON T.hUnit = U.hMy
     INNER JOIN H8Summ S ON S.hTenant = T.hMyPerson AND S.bMasterRecd = -1
     INNER JOIN H8Prop H8P ON H8P.hProp= PR.hMy
     INNER JOIN UTResp R ON Case When R.iType = 331 Then R.hH8Unit Else R.hH8Prop End = Case When R.iType = 331 Then H8U.hMy Else H8P.hMy End AND (R.bTenant = -1 or R.bOwner = -1)
     INNER JOIN UtilServ US ON US.hMy = R.hUtilServ
WHERE 1 = 1 And R.iType = Case When (Select Count(*) From UTResp Where hH8Unit = H8U.hMy ) = 0 Then 330 Else 331 End
and s.hmy = #key#)
select u.utilResp             utilityResp
from utilResponsibility u
where u.utilresp is not null
and u.utilType not like 'Tenant%'
//END DETAIL utilResp


//DETAIL ApplResp 8
WITH ApplResponsibility (utiltype,utilresp)
AS (
SELECT Distinct
us.sdesc,
CASE
    WHEN us.scode = 'TORange' THEN 'Range - ' + CASE
                                                      WHEN R.bTenant = -1 THEN 'T'
                                                      WHEN R.bOwner = -1 THEN 'O'
                                                      WHEN isnull(R.bTenant,R.bOwner) is null THEN 'NOT ASSIGNED'
                                                      ELSE 'testing'
                                                    END
    WHEN us.scode = 'TOFridge' THEN 'Refrigerator - ' + CASE
                                                      WHEN R.bTenant = -1 THEN 'T'
                                                      WHEN R.bOwner = -1 THEN 'O'
                                                      WHEN isnull(R.bTenant,R.bOwner) is null THEN 'NOT ASSIGNED'
                                                      ELSE 'testing'
                                                    END
  END utilResp
FROM Property PR
     INNER JOIN Unit U ON U.hProperty = PR.hMy
     INNER JOIN H8Unit H8U ON H8U.hUnit = U.hMy
     INNER JOIN Tenant T ON T.hUnit = U.hMy
     INNER JOIN H8Summ S ON S.hTenant = T.hMyPerson AND S.bMasterRecd = -1
     INNER JOIN H8Prop H8P ON H8P.hProp= PR.hMy
     INNER JOIN UTResp R ON Case When R.iType = 331 Then R.hH8Unit Else R.hH8Prop End = Case When R.iType = 331 Then H8U.hMy Else H8P.hMy End AND (R.bTenant = -1 or R.bOwner = -1)
     INNER JOIN UtilServ US ON US.hMy = R.hUtilServ
WHERE 1 = 1 And R.iType = Case When (Select Count(*) From UTResp Where hH8Unit = H8U.hMy ) = 0 Then 330 Else 331 End
and s.hmy = #key#)
select u.utilResp             applResp
from ApplResponsibility u
where u.utilresp is not null
and u.utilType like 'Tenant%'
//END DETAIL applResp


//FORMAT
today MMMM DD, YYYY
dueDate MMMM DD, YYYY
termStartDate MMMM DD, YYYY
termEndDate MMMM DD, YYYY

landlordFullAddr Multiline
resMailingAddr Multiline
unitFullAddr Multiline
//END FORMAT


//FILTER
//Type, DataTyp,        Name,          Caption,  Key,   List,                     Val1, Val2, Mandatory, Multi-Type, Title
     C,       T,       hprop,         Property,     ,     61,          p.hmy = #hprop#,     ,         Y,          N,    Y,
     C,       T,     htenant,           Tenant,     ,      1,  t.hmyperson = #htenant#,     ,         Y,          N,    Y,
     L,       T,   copyLease,   Copy of Lease?,     , ^No^Yes,                        ,     ,         Y,          N,    Y,
     L,       T,  newLandlord,   New Landlord?,     , ^No^Yes,                        ,     ,         Y,          N,    Y,
     L,       T,      option,  Option 2: A/B/C,     , ^A^B^C,                         ,     ,         Y,          N,    Y,
     0,       A, termEndDate,   Lease End Date,     ,       ,                         ,     ,         Y,          N,    Y,
     0,       I,  termLength, Lease Term Length,    ,       ,                         ,     ,         Y,          N,    Y,
//END FILTER
