//vista

//Notes
Copyright (c) 2001 by Yardi Systems
  NAME
    rs_PHA_Recert.txt
  DESCRIPTION
    Listing of families that have a recertificaion due within a user-defined
    date range.  The user can choose a variety of sort options and can choose
    to present the data in a listing with summary info, a listing with detailed
    info, a form letter or a cross-tab statistical summary.
  NOTES
  MODIFIED
   05/03/05  - Modified to pull recert date from most recent completed 58 of action type where the Next Reexam date is validated ( '1,2,3,4,5,6,7,9,C')
               Previously pulling highest re-examination date in 50058 history.  This will allow for correction or lowering of the next-reexam date
               and will exclude residents where the last 58 is a completed End or PortOut regardless of Resident Status.
    3/28/03  -  Modified to add criteria to pull recert from completed 58s rather than from the Master Record.
                This change was needed because users can change master record but not do a 58.  If they do this,
                the resident should not drop off of the report.
    4/27/01  -  Created by Ray Elliott
    02/27/06 - Modified to acknowledge the correction number on the 58, replaced the latest58 logic with the
               get latest function
    02/03/06 - TR#70640 Report reformatted By Pariseema Soundankar.
    04/07/06 - TR#70065
    07/11/06 - tr#75805
    06/20/2007 - TR#100869 - Vaishali Sonekar - Added #p.hmy# into single quotes for PropertyName Parameter
    10/03/2008 - TR#125975 - VaishaliS - Updated query for table 'v' for eliminating duplication of records for same tenant
    03/29/2010 - TR#205026 - YogitaMe - Added filter for masking the SSN.
    08/27/2010 - TR#219246 - Sagar Mate - Done changes in script to make the report work for conductor
    05/16/2011 - TR#238680 - Ajit Panaskar -Consider 58 type '14 - Historical adjustments' as well for recertification report.
    10/13/2011 - TR#234599 - HirenS - addressed performance issue, replaced fh8_PRH_GetLatest58() function with the modified queries.
    08/22/2013 - TR#312233 - RupeshkumarB - Modified query to move formatting done in SSRS to SQL
    08/22/2013 - TR#312531 - Amols - Modified query to moved crytsal formaule to Query and Redirect report to different rdlcs
    09/12/2014 - TR#335205 - AmitP - Pull mailing address for tenants where 5b (same mailing address) set to "NO."
    09/15/2014 - TR#335205 - AmitP -  always show the tenant address on the tenant letter and the detail report.
    03/05/2015 - TR#356521 - ManojKu -  Fixed Mask SSN and Sorting issue.
    03/05/2015 - TR#355352 - ManojKu -  Removed the date lease end condition and added a condition to exclude tenant having transfer to property records.
    03/05/2015 - TR#328729 - ManojKu -  Excluded the Aff only tenants from the report.
		05/19/2015 - TR#373727 - Chetanah - Changed param drill links from vb 6 to YSI.Net aspx pages.
		12/07/2015 - TR#395624 - ChetanAh - Removed PII fields from reports.
		03/08/2016 - TR#403217 - ChetanAh - Converted PHA letters to Filldocs
		08/30/2018 - TR#494642 - PrasadD - Made Side menu and Correspondence versions in sync with Analytics report.
		10/16/2018 - TR#502255 - ManojKu - Ignore applicant/residents marked as excluded from RENTCafï¿½.
    06/28/2019 - Last Modified by jonathan
//End Notes

//Database
FILLDOCS
//End Database

//Options
OutPutToPDF
//End Options

//Title
Recertification Letters
//end title

//Select Primary
Select case When '#RptType#' = 'Tenant Letter' AND t.sfields0 <> 'Spanish' then 'y_PHA_Recert_Tenant_Letter.docx'
						When '#RptType#' = 'Tenant Letter' AND t.sfields0 = 'Spanish' then 'y_PHA_Recert_Tenant_Letter_Spanish.docx'
						When '#RptType#' = 'Owner Letter' then 'y_PHA_Recert_Owner_Letter.docx'	 end  _FILE_NL1,
        case When '#RptType#' = 'Tenant Letter' AND t.sfields0 = 'Spanish' then 'y_PHA_Recert_Tenant_Letter.docx' end _FILE_NL2,
        case When t.sfields0 <> 'Spanish' then 'y_PHA_Recert_Tenant_Letter_Cover.docx' else 'y_PHA_Recert_Tenant_Letter_Cover_Spanish.docx' end  _FILE_NL3,
            '\\asp1\bfs\busersdefpaths\Housing Authority of t 85430\Live\Reports\header_image.jpg'    headerImage,
                            rsc.chairperson                             chairperson,
                            rsc.viceChairperson                         viceChairperson,
                            rsc.boardmember1                            boardmember1,
                            rsc.boardmember2                            boardmember2,
                            rsc.boardmember3                            boardmember3,
                            rsc.boardmember4                            boardmember4,
                            rsc.boardmember5                            boardmember5,
                            rsc.execDirector                            execDirector,
			 PHA.sAgencyName AgencyName,
       isnull(PHA.sAddr1,'') + '^' +
       Case When RTrim(PHA.sAddr2)= '' Then
			 rtrim(PHA.sCity)+ ', ' + rtrim(PHA.sState)  + ' ' + Case When Len(RTrim(PHA.sZipCode))=9 Then Left(PHA.sZipCode,5)+ '-' + Right(PHA.sZipCode,4) Else PHA.sZipCode END
			 ELSE  RTrim(PHA.sAddr2) End + '^' +
			 Case When RTrim(PHA.sAddr2)= '' Then ''
	   Else
			 rtrim(PHA.sCity)+ ', ' + rtrim(PHA.sState)  + ' ' + Case When Len(RTrim(PHA.sZipCode))=9 Then Left(PHA.sZipCode,5)+ '-' + Right(PHA.sZipCode,4) Else PHA.sZipCode END
		 End
        AgencyAddressLine,
       CASE
					  WHEN SUBSTRING(PHA.sPhone1,4,1)='-' OR SUBSTRING(PHA.sPhone1,1,1)='('
					  THEN PHA.sPhone1
					        WHEN LEN(RTRIM(PHA.sPhone1))> 7 AND LEN(RTRIM(PHA.sPhone1))< 11
					  THEN '(' + SUBSTRING(PHA.sPhone1,1,3) + ') ' + SUBSTRING(PHA.sPhone1,4,3) + '-' + SUBSTRING(PHA.sPhone1,7,7)

					  WHEN LEN(RTRIM(PHA.sPhone1))> 10
					  THEN '(' + SUBSTRING(PHA.sPhone1,1,3) + ') ' + SUBSTRING(PHA.sPhone1,4,3) + '-' + SUBSTRING(PHA.sPhone1,7,4)+ ' x '
					                + SUBSTRING (PHA.sPhone1, 11,5)
					  WHEN LEN(PHA.sPhone1)> 3
					  THEN SUBSTRING(PHA.sPhone1,1,3) + '-' + SUBSTRING(PHA.sPhone1,4,5)
					  Else PHA.sPhone1
			 END PHAsPhone1,

			 CASE
					  WHEN SUBSTRING(PHA.sFax,4,1)='-' OR SUBSTRING(PHA.sFax,1,1)='('
					  THEN PHA.sFax
					        WHEN LEN(RTRIM(PHA.sFax))> 7 AND LEN(RTRIM(PHA.sFax))< 11
					  THEN '(' + SUBSTRING(PHA.sFax,1,3) + ') ' + SUBSTRING(PHA.sFax,4,3) + '-' + SUBSTRING(PHA.sFax,7,7)

					  WHEN LEN(RTRIM(PHA.sFax))> 10
					  THEN '(' + SUBSTRING(PHA.sFax,1,3) + ') ' + SUBSTRING(PHA.sFax,4,3) + '-' + SUBSTRING(PHA.sFax,7,4)+ ' x '
					                + SUBSTRING (PHA.sFax, 11,5)
					  WHEN LEN(PHA.sFax)> 3
					  THEN SUBSTRING(PHA.sFax,1,3) + '-' + SUBSTRING(PHA.sFax,4,5)
					  Else PHA.sFax
			 END PHAsFax,
			 CASE
					  WHEN SUBSTRING( PHA.sTTY,4,1)='-' OR SUBSTRING( PHA.sTTY,1,1)='('
					  THEN  PHA.sTTY
					        WHEN LEN(RTRIM( PHA.sTTY))> 7 AND LEN(RTRIM( PHA.sTTY))< 11
					  THEN '(' + SUBSTRING( PHA.sTTY,1,3) + ') ' + SUBSTRING( PHA.sTTY,4,3) + '-' + SUBSTRING( PHA.sTTY,7,7)

					  WHEN LEN(RTRIM( PHA.sTTY))> 10
					  THEN '(' + SUBSTRING( PHA.sTTY,1,3) + ') ' + SUBSTRING( PHA.sTTY,4,3) + '-' + SUBSTRING( PHA.sTTY,7,4)+ ' x '
					                + SUBSTRING ( PHA.sTTY, 11,5)
					  WHEN LEN( PHA.sTTY)> 3
					  THEN SUBSTRING( PHA.sTTY,1,3) + '-' + SUBSTRING( PHA.sTTY,4,5)
					  Else  PHA.sTTY
			 END PHAsTTY,
       PHA.sEmail PHAsEMail,
       PHA.sURL PHAsURL,
       S.hMy hMy,
       S.hTenant,
       S.sHeadName3b,
       S.sProgram1d,
       S.sProjNum,
       S.iTotMem3r,
       Case Last58.sActionType2a When 'A' Then '10' When 'B' Then '11' When 'C' Then '12' When 'D' Then '13' When 'E' Then '14' When 'F' Then '15' Else Last58.sActionType2a End LastAction,
       Last58.dtEffective2b,
       Last58.hMy hLast58,
       Case When Comp58.dtNextEffective2d between '#dtFrom#' and '#dtTo#' Then Comp58.dtNextEffective2d
            When Comp58.dtNextEffectiveFlat between '#dtFrom#' and '#dtTo#' Then Comp58.dtNextEffectiveFlat Else Null
       End dtNextEffective,
       Comp58.hMy hComp58,
       Comp58.dtEffective2b Comp58Eff,
       Case Comp58.sActionType2a When 'A' Then '10' When 'B' Then '11' When 'C' Then '12' When 'D' Then '13' When 'E' Then '14' When 'F' Then '15' Else Comp58.sActionType2a End CompAction,
       T.sCode TsCode,
       rtrim(T.sLastName) LNameT,
       rtrim(T.sFirstName) FNameT,
       T.hUnit,
       T.sAddr1,
       T.sAddr2,
       rtrim(T.sCity) sCity,
       rtrim(T.sState) sState,
       T.sZipCode,
       CASE
					  WHEN SUBSTRING(T.sPHoneNum1,4,1)='-' OR SUBSTRING(T.sPHoneNum1,1,1)='('
					  THEN T.sPHoneNum1
					        WHEN LEN(RTRIM(T.sPHoneNum1))> 7 AND LEN(RTRIM(T.sPHoneNum1))< 11
					  THEN '(' + SUBSTRING(T.sPHoneNum1,1,3) + ') ' + SUBSTRING(T.sPHoneNum1,4,3) + '-' + SUBSTRING(T.sPHoneNum1,7,7)

					  WHEN LEN(RTRIM(T.sPHoneNum1))> 10
					  THEN '(' + SUBSTRING(T.sPHoneNum1,1,3) + ') ' + SUBSTRING(T.sPHoneNum1,4,3) + '-' + SUBSTRING(T.sPHoneNum1,7,4)+ ' x '
					                + SUBSTRING (T.sPHoneNum1, 11,5)
					  WHEN LEN(T.sPHoneNum1)> 3
					  THEN SUBSTRING(T.sPHoneNum1,1,3) + '-' + SUBSTRING(T.sPHoneNum1,4,5)
					  Else T.sPHoneNum1
			 END SPHONENUM1,
       P.sCode PsCode,
       P.hMy PhMy,
       U.sCode UsCode,
       U.iBedRooms,
			 CASE WHEN '#RptType#' = 'Tenant Letter' THEN T.sAddr1 ELSE A.sAddr1 END AddressP1,
       A.sAddr2 AddressP2,
       rtrim(A.sCity) CityP,
       rtrim(A.sState) StateP,
       A.sZipCode ZipP,
       O.uCode,
       rtrim(O.uLastName) OwnLName,
       rtrim(O.sFirstName) OwnFName,
       O.sAddr1 OAdd1,
       O.sAddr2 OAdd2,
       rtrim(O.sCity) OCity,
       rtrim(O.sState) OState,
       O.sZipCode OZip,
       CASE
					  WHEN SUBSTRING(O.sPhoneNum0,4,1)='-' OR SUBSTRING(O.sPhoneNum0,1,1)='('
					  THEN O.sPhoneNum0
					        WHEN LEN(RTRIM(O.sPhoneNum0))> 7 AND LEN(RTRIM(O.sPhoneNum0))< 11
					  THEN '(' + SUBSTRING(O.sPhoneNum0,1,3) + ') ' + SUBSTRING(O.sPhoneNum0,4,3) + '-' + SUBSTRING(O.sPhoneNum0,7,7)

					  WHEN LEN(RTRIM(O.sPhoneNum0))> 10
					  THEN '(' + SUBSTRING(O.sPhoneNum0,1,3) + ') ' + SUBSTRING(O.sPhoneNum0,4,3) + '-' + SUBSTRING(O.sPhoneNum0,7,4)+ ' x '
					                + SUBSTRING (O.sPhoneNum0, 11,5)
					  WHEN LEN(O.sPhoneNum0)> 3
					  THEN SUBSTRING(O.sPhoneNum0,1,3) + '-' + SUBSTRING(O.sPhoneNum0,4,5)
					  Else O.sPhoneNum0
			 END OPhone,
       O.sFedId TaxIDNum,
       O.hMy hVendorLtr,
       V.iBeds vBeds,
       St.Status,
       Case When rtrim(rtrim(E.sFirstName) + ' ' + rtrim(E.uLastName))='' Then 'us' else rtrim(rtrim(E.sFirstName) + ' ' + rtrim(E.uLastName)) End
        Caseworker
       , LEFT(E.sFirstName,1)+LEFT(E.uLastName,1) CWInit
       , RIGHT(T.sFedid,4) ss4
       ,CASE WHEN '#SortOrd#' = 'Tenant Name' THEN ''
			 WHEN '#SortOrd#' = 'Tenant Code' THEN ''
			 WHEN '#SortOrd#' = 'Program' THEN
					CASE WHEN S.sProgram1d = 'P' THEN 'Public Housing'
						 WHEN S.sProgram1d = 'CE' THEN 'Section 8 Certificate'
						 WHEN S.sProgram1d = 'VO' THEN 'Section 8 Voucher'
						 WHEN S.sProgram1d = 'MR' THEN 'Mod Rehab'
						 WHEN S.sProgram1d = 'B' THEN 'Indian Housing'
						 WHEN S.sProgram1d = 'H' THEN 'Homeownership'
						 WHEN S.sProgram1d = 'PV' THEN 'Project Based Voucher'
						 ELSE 'Unk'
					END
			WHEN '#SortOrd#' = 'Caseworker' THEN 'Caseworker: ' + CASE WHEN LEN(LTRIM(RTRIM(E.uLastName))) > 0 THEN E.uLastName + ', ' + E.sFirstName ELSE 'Unknown' END
			WHEN '#SortOrd#' = 'Property' THEN P.sCode
			WHEN '#SortOrd#' = 'Tenant Status' THEN St.Status
			ELSE '' END SortOrd
			,Case When Isnull(T.sAddr1,'')<>'' Then T.sAddr1  + CHAR(13)   Else'' End +
			 Case When Isnull(T.sAddr2,'')<>''  Then T.sAddr2  + CHAR(13)  Else '' End +
			 Case When rtrim(Isnull(T.sCity,''))<>''  Then RTrim(T.sCity) Else RTrim(T.sCity)  End +
			 Case When rtrim(Isnull(T.sState,''))<>''  Then ', ' + Rtrim(T.sCity) Else RTrim(T.sState) End +
			 Case When rtrim(Isnull(T.sZipCode,''))<>''  Then ' ' + RTrim(T.sZipCode)  Else '' End
			 TAddress
			 ,Case When Isnull(O.sAddr1,'')<>'' Then O.sAddr1  + CHAR(13)   Else'' End +
			 Case When Isnull(O.sAddr2,'')<>''  Then O.sAddr2  + CHAR(13)  Else '' End +
			 Case When rtrim(Isnull(O.sCity,''))<>''  Then RTrim(O.sCity) Else RTrim(O.sCity)  End +
			 Case When rtrim(Isnull(O.sState,''))<>''  Then ', ' + RTrim(O.sState)  Else RTrim(O.sState) End +
			 Case When rtrim(Isnull(O.sZipCode,''))<>''  Then ' ' + RTrim(O.sZipCode)  Else '' End
			 OAddress
			 ,Case when rtrim(T.sFirstName)<>'' Then rtrim(T.sFirstName) +
			 Case When rtrim(T.sLastName)<>'' Then ' ' + rtrim(T.sLastName)  Else '' End
			      Else rtrim(T.sLastName) End
		   TName


		   ,rtrim(T.sLastName) +', '+ rtrim(T.sFirstName) TenantNameLF
		   ,Case when RTrim(O.sFirstName)<>'' Then RTrim(O.sFirstName) +
			 Case When RTrim(O.uLastName)<>'' Then ' ' + RTrim(O.uLastName) Else '' End
			      Else RTrim(O.uLastName)End
		   OName,

		    Case When RTrim(PHA.sAddr2)= '' Then
			 rtrim(PHA.sCity)+ ', ' + rtrim(PHA.sState)  + ' ' + Case When Len(RTrim(PHA.sZipCode))=9 Then Left(PHA.sZipCode,5)+ '-' + Right(PHA.sZipCode,4) Else PHA.sZipCode END
			 ELSE  RTrim(PHA.sAddr2) End
	 PHAAddrLine2,

	  Case When RTrim(PHA.sAddr2)= '' Then ''
	   Else
			 rtrim(PHA.sCity)+ ', ' + rtrim(PHA.sState)  + ' ' + Case When Len(RTrim(PHA.sZipCode))=9 Then Left(PHA.sZipCode,5)+ '-' + Right(PHA.sZipCode,4) Else PHA.sZipCode END
		 End
	 PHAAddrLine3,

       CASE WHEN '#RptType#' = 'Tenant Letter' THEN
       Case When RTrim(T.sAddr2)= '' Then
			 Case When (rtrim(T.sCity)+ ', ' + rtrim(T.sState) + ' '+ RTrim(T.sZipCode) )<>',' Then (rtrim(T.sCity)+ ', ' + rtrim(T.sState)  + ' ' + RTrim(T.sZipCode) + CHAR(13)) Else '' End
			 ELSE  RTrim(T.sAddr2) End
       ELSE
       Case When RTrim(A.sAddr2)= '' Then
			 Case When (rtrim(A.sCity)+ ', ' + rtrim(A.sState) + ' '+ RTrim(A.sZipCode) )<>',' Then (rtrim(A.sCity)+ ', ' + rtrim(A.sState)  + ' ' + RTrim(A.sZipCode) + CHAR(13)) Else '' End
			 ELSE  RTrim(A.sAddr2) End
       END + '^'
       + CASE WHEN '#RptType#' = 'Tenant Letter' THEN
				Case When (rtrim(T.sCity)+ ', ' + rtrim(T.sState) + ' '+ RTrim(T.sZipCode) )<>',' AND RTrim(T.sAddr2)<> '' Then (rtrim(T.sCity)+ ', ' + rtrim(T.sState)  + ' ' + RTrim(T.sZipCode) + CHAR(13)) Else '' End
			 ELSE
				Case When (rtrim(A.sCity)+ ', ' + rtrim(A.sState) + ' '+ RTrim(A.sZipCode) )<>',' AND RTrim(A.sAddr2)<> '' Then (rtrim(A.sCity)+ ', ' + rtrim(A.sState)  + ' ' + RTrim(A.sZipCode) + CHAR(13)) Else '' End
			 END
			 TenAddressLine,

		   Case When RTrim(O.sAddr2)= '' Then
			 Case When (rtrim(O.sCity)+ ', ' + rtrim(O.sState) + ' '+ RTrim(O.sZipCode) )<>','Then
			 (rtrim(O.sCity)+ ', ' + rtrim(O.sState)  + ' ' + RTrim(O.sZipCode) + CHAR(13))Else '' End
			 ELSE  RTrim(O.sAddr2) End OwnAddressLine,
			 Year(Case When Comp58.dtNextEffective2d between '#dtFrom#' and '#dtTo#' Then Comp58.dtNextEffective2d
                       When Comp58.dtNextEffectiveFlat between '#dtFrom#' and '#dtTo#' Then Comp58.dtNextEffectiveFlat Else Null
                  End) grpYear,
             Month(Case When Comp58.dtNextEffective2d between '#dtFrom#' and '#dtTo#' Then Comp58.dtNextEffective2d
                       When Comp58.dtNextEffectiveFlat between '#dtFrom#' and '#dtTo#' Then Comp58.dtNextEffectiveFlat Else Null
                  End) grpMonth,
             Right(convert(varchar(10), (Case When Comp58.dtNextEffective2d between '#dtFrom#' and '#dtTo#' Then Comp58.dtNextEffective2d
                       When Comp58.dtNextEffectiveFlat between '#dtFrom#' and '#dtTo#' Then Comp58.dtNextEffectiveFlat Else Null
                  End) ,103),7) sgrpMonth


                   ,CASE WHEN CASE
					  WHEN SUBSTRING(PHA.sPhone1,4,1)='-' OR SUBSTRING(PHA.sPhone1,1,1)='('
					  THEN PHA.sPhone1
					        WHEN LEN(RTRIM(PHA.sPhone1))> 7 AND LEN(RTRIM(PHA.sPhone1))< 11
					  THEN '(' + SUBSTRING(PHA.sPhone1,1,3) + ') ' + SUBSTRING(PHA.sPhone1,4,3) + '-' + SUBSTRING(PHA.sPhone1,7,7)

					  WHEN LEN(RTRIM(PHA.sPhone1))> 10
					  THEN '(' + SUBSTRING(PHA.sPhone1,1,3) + ') ' + SUBSTRING(PHA.sPhone1,4,3) + '-' + SUBSTRING(PHA.sPhone1,7,4)+ ' x '
					                + SUBSTRING (PHA.sPhone1, 11,5)
					  WHEN LEN(PHA.sPhone1)> 3
					  THEN SUBSTRING(PHA.sPhone1,1,3) + '-' + SUBSTRING(PHA.sPhone1,4,5)
			 		  Else PHA.sPhone1
			          END = ''
			          THEN ''
			          ELSE 'Phone: ' + CASE
					  WHEN SUBSTRING(PHA.sPhone1,4,1)='-' OR SUBSTRING(PHA.sPhone1,1,1)='('
					  THEN PHA.sPhone1
					        WHEN LEN(RTRIM(PHA.sPhone1))> 7 AND LEN(RTRIM(PHA.sPhone1))< 11
					  THEN '(' + SUBSTRING(PHA.sPhone1,1,3) + ') ' + SUBSTRING(PHA.sPhone1,4,3) + '-' + SUBSTRING(PHA.sPhone1,7,7)

					  WHEN LEN(RTRIM(PHA.sPhone1))> 10
					  THEN '(' + SUBSTRING(PHA.sPhone1,1,3) + ') ' + SUBSTRING(PHA.sPhone1,4,3) + '-' + SUBSTRING(PHA.sPhone1,7,4)+ ' x '
					                + SUBSTRING (PHA.sPhone1, 11,5)
					  WHEN LEN(PHA.sPhone1)> 3
					  THEN SUBSTRING(PHA.sPhone1,1,3) + '-' + SUBSTRING(PHA.sPhone1,4,5)
			 		  Else PHA.sPhone1
			          END
			       END
                  +
                  CASE WHEN
                   CASE
					  WHEN SUBSTRING(PHA.sFax,4,1)='-' OR SUBSTRING(PHA.sFax,1,1)='('
					  THEN PHA.sFax
					        WHEN LEN(RTRIM(PHA.sFax))> 7 AND LEN(RTRIM(PHA.sFax))< 11
					  THEN '(' + SUBSTRING(PHA.sFax,1,3) + ') ' + SUBSTRING(PHA.sFax,4,3) + '-' + SUBSTRING(PHA.sFax,7,7)

					  WHEN LEN(RTRIM(PHA.sFax))> 10
					  THEN '(' + SUBSTRING(PHA.sFax,1,3) + ') ' + SUBSTRING(PHA.sFax,4,3) + '-' + SUBSTRING(PHA.sFax,7,4)+ ' x '
					                + SUBSTRING (PHA.sFax, 11,5)
					  WHEN LEN(PHA.sFax)> 3
					  THEN SUBSTRING(PHA.sFax,1,3) + '-' + SUBSTRING(PHA.sFax,4,5)
					  Else PHA.sFax
					END =''
				   THEN ''
				   ELSE
				   '  *   Fax:  ' +

						 CASE
						  WHEN SUBSTRING(PHA.sFax,4,1)='-' OR SUBSTRING(PHA.sFax,1,1)='('
						  THEN PHA.sFax
								WHEN LEN(RTRIM(PHA.sFax))> 7 AND LEN(RTRIM(PHA.sFax))< 11
						  THEN '(' + SUBSTRING(PHA.sFax,1,3) + ') ' + SUBSTRING(PHA.sFax,4,3) + '-' + SUBSTRING(PHA.sFax,7,7)

						  WHEN LEN(RTRIM(PHA.sFax))> 10
						  THEN '(' + SUBSTRING(PHA.sFax,1,3) + ') ' + SUBSTRING(PHA.sFax,4,3) + '-' + SUBSTRING(PHA.sFax,7,4)+ ' x '
										+ SUBSTRING (PHA.sFax, 11,5)
						  WHEN LEN(PHA.sFax)> 3
						  THEN SUBSTRING(PHA.sFax,1,3) + '-' + SUBSTRING(PHA.sFax,4,5)
						  Else PHA.sFax
						END
				   END


			    +
			    CASE WHEN
			     CASE
					  WHEN SUBSTRING( PHA.sTTY,4,1)='-' OR SUBSTRING( PHA.sTTY,1,1)='('
					  THEN  PHA.sTTY
					        WHEN LEN(RTRIM( PHA.sTTY))> 7 AND LEN(RTRIM( PHA.sTTY))< 11
					  THEN '(' + SUBSTRING( PHA.sTTY,1,3) + ') ' + SUBSTRING( PHA.sTTY,4,3) + '-' + SUBSTRING( PHA.sTTY,7,7)

					  WHEN LEN(RTRIM( PHA.sTTY))> 10
					  THEN '(' + SUBSTRING( PHA.sTTY,1,3) + ') ' + SUBSTRING( PHA.sTTY,4,3) + '-' + SUBSTRING( PHA.sTTY,7,4)+ ' x '
					                + SUBSTRING ( PHA.sTTY, 11,5)
					  WHEN LEN( PHA.sTTY)> 3
					  THEN SUBSTRING( PHA.sTTY,1,3) + '-' + SUBSTRING( PHA.sTTY,4,5)
					  Else  PHA.sTTY
			      END = ''
			      THEN ''
			      ELSE '  *   TTY: '+
			       CASE
					  WHEN SUBSTRING( PHA.sTTY,4,1)='-' OR SUBSTRING( PHA.sTTY,1,1)='('
					  THEN  PHA.sTTY
					        WHEN LEN(RTRIM( PHA.sTTY))> 7 AND LEN(RTRIM( PHA.sTTY))< 11
					  THEN '(' + SUBSTRING( PHA.sTTY,1,3) + ') ' + SUBSTRING( PHA.sTTY,4,3) + '-' + SUBSTRING( PHA.sTTY,7,7)

					  WHEN LEN(RTRIM( PHA.sTTY))> 10
					  THEN '(' + SUBSTRING( PHA.sTTY,1,3) + ') ' + SUBSTRING( PHA.sTTY,4,3) + '-' + SUBSTRING( PHA.sTTY,7,4)+ ' x '
					                + SUBSTRING ( PHA.sTTY, 11,5)
					  WHEN LEN( PHA.sTTY)> 3
					  THEN SUBSTRING( PHA.sTTY,1,3) + '-' + SUBSTRING( PHA.sTTY,4,5)
					  Else  PHA.sTTY
			      END
			      END
			      AgencyPhoneLine,
			      CASE WHEN PHA.sEmail= '' THEN '' ELSE 'E-mail: ' + PHA.sEmail END +  CASE WHEN PHA.sEmail= '' OR PHA.sURL=''  THEN '' ELSE '   *   ' END + CASE WHEN PHA.sURL= '' THEN '' ELSE 'Web: ' +  PHA.sURL END
			      AgencyEmail,
			      LEFT(CAST (GETDATE() AS Varchar),6)+ ', ' + CAST(YEAR(GETDATE())as VARCHAR) LetterDate,
            GETDATE() LetterDateS,
                  CAST(MONTH(S.dtEffective2b) as VARCHAR)+'/'+ CAST(YEAR(S.dtEffective2b)as VARCHAR) LetterDateShort,
                  Convert(varchar(8),Dateadd(d,10,getdate()),1) daysplus10,
                  Convert(varchar(8),Dateadd(d,20,getdate()),1) daysPlus20,
                  Convert(varchar(8),Dateadd(d,20,getdate()),3) daysPlus20S,
                  Convert(varchar(8),DateAdd(d,-60,Case When Comp58.dtNextEffective2d between '#dtFrom#' and '#dtTo#' Then Comp58.dtNextEffective2d When Comp58.dtNextEffectiveFlat between '#dtFrom#' and '#dtTo#' Then Comp58.dtNextEffectiveFlat Else Null End),1) daysMinus60,
                  Convert(varchar(8),DateAdd(d,-30,Case When Comp58.dtNextEffective2d between '#dtFrom#' and '#dtTo#' Then Comp58.dtNextEffective2d When Comp58.dtNextEffectiveFlat between '#dtFrom#' and '#dtTo#' Then Comp58.dtNextEffectiveFlat Else Null End),1) daysMinus30,
						GETDATE() ExecutionTime,
            char(13)+char(10)+' '+char(13)+char(10)+ case when t.sfields0 = 'Spanish' then 'Si no cumple con el requisito mencionado, es posible que se ponga fin a su asistencia de renta efectivo el ' + Convert(varchar(8),Comp58.dtNextEffective2d,3) + Case P.sCode When '100' THEN '.' Else ', y usted serÃ¡ responsable de pagar el contrato completo a su propietario efectivo ' + Convert(varchar(8),Comp58.dtNextEffective2d,3) + '.' +char(13)+char(10)+' '+char(13)+char(10) END else 'If you fail to abide by the requirement  above, your rental assistance may be terminated effective ' + Convert(varchar(8),Comp58.dtNextEffective2d,1) + Case P.sCode When '100' THEN '.' Else ', and you will be responsible for paying the full contract to your Landlord effective ' + Convert(varchar(8),Comp58.dtNextEffective2d,1) + '.' +char(13)+char(10)+' '+char(13)+char(10) END END TermPara,
            char(13)+char(10)+' '+char(13)+char(10)+'If you fail to abide by the requirement  above, your rental assistance may be terminated effective ' + Convert(varchar(8),Comp58.dtNextEffective2d,1) + Case P.sCode When '100' THEN '.' Else ', and you will be responsible for paying the full contract to your Landlord effective ' + Convert(varchar(8),Comp58.dtNextEffective2d,1) + '.' +char(13)+char(10)+' '+char(13)+char(10) END TermParaEng,
            'PropDet' _GRID_0
From  H8Summ S
      Join Tenant T On T.hMyPerson = S.hTenant AND S.bMasterRecd = -1
      Join Property P On P.hMy = S.hProp and T.hProperty = P.hMy
      Join Unit U On T.hUnit = U.hMy
      JOIN H8Summ Last58 ON Last58.hTenant = T.hMyperson
      JOIN (SELECT MAX (ISNULL(H.sCerts, '')) sCerts, hTenant
             FROM H8SUMM H
             WHERE  H.dtEffective2b <= '01-Jan-2100'
             AND CHARINDEX(H.sActionType2a, '123456789ABCDEF') <> 0
             AND H.sCerts <> ''
             GROUP BY H.hTenant) t1 ON Last58.hTenant = t1.hTenant AND Last58.sCerts = t1.sCerts
      JOIN H8Summ Comp58 ON Comp58.hTenant = T.hMyperson
      JOIN (SELECT MAX (ISNULL(H.sCerts, '')) sCerts, hTenant
             FROM H8SUMM H
             WHERE  H.dtEffective2b <= '01-Jan-2100'
             AND CHARINDEX(H.sActionType2a, '12345679CE') <> 0
             AND H.sCerts <> ''
             GROUP BY H.hTenant) t2 ON Comp58.hTenant = t2.hTenant AND Comp58.sCerts = t2.sCerts
      Join TenStatus St On St.iStatus = T.iStatus
      Join H8Param PHA On PHA.hChart = 0
      Left Join Addr A On A.hPointer = U.hMy and A.iType = 4
      Left Join H8Unit H8U On H8U.hUnit = U.hMy
      Left Join Person O On O.hMy = Case isNull(H8U.hVendorLtr, 0) When 0 Then H8U.hVendor Else H8U.hVendorLtr End
      Left Join Person E On E.hMy = S.hCaseworker And E.iPersonType = 79
      Left Join (Select hSum, iBedroom11a iBeds, 'CE' sProgram From H8Certif
                Union
                Select hSum, iBedroom12a iBeds, 'VO' sProgram From H8Vouch) V On V.hSum = S.hMy and V.sProgram = S.sProgram1d
			LEFT JOIN H8TenantxRef xRef ON xRef.hTenant = T.hMyPerson
      cross join board_commishes_footer_RSC rsc
Where Comp58.sActionType2a Not In ('5', '6')
  and S.sProgram1d = Case '#s.Program#'
                          When 'Voucher'               Then 'VO'
                          When 'Certificate'           Then 'CE'
                          When 'Public Housing'        Then 'P'
                          When 'MOD Rehab'             Then 'MR'
                          When 'Homeownership'         Then 'H'
                          When 'Project Based Voucher' Then 'PV'
                          Else S.sProgram1d
                     End
  and S.sFSS2e = Case '#s.Program#' When 'FSS' Then 'Y' Else S.sFSS2e End
  and ((1 = Case When 'Re-Examinations' In ('#RecertType#') Then Case When Comp58.dtNextEffective2d between '#dtFrom#' and '#dtTo#' Then 1 Else 0 End
                 Else 0
            End) Or
       (1 = Case When 'Flat Rent Updates' In ('#RecertType#') Then Case When Comp58.dtNextEffectiveFlat between '#dtFrom#' and '#dtTo#' Then 1 Else 0 End
                 Else 0
            End) Or
       (1 = Case When 'Re-Examinations' Not In ('#RecertType#') and 'Flat Rent Updates' Not In ('#RecertType#') Then
                      Case When (Comp58.dtNextEffectiveFlat between '#dtFrom#' and '#dtTo#') or
                                (Comp58.dtNextEffective2d between '#dtFrom#' and '#dtTo#') Then 1
                           Else 0
                      End
                 Else 0
            End)
      )
  AND 1 = Case When ('Re-Examinations' In ('#RecertType#') OR '' IN ('#RecertType#')) Then ( CASE WHEN Comp58.dtleaseend IS NOT NULL THEN ( CASE WHEN LAST58.sactiontype2a = 'A' THEN 1 ELSE ( CASE WHEN Comp58.dtleaseend > comp58.dtnexteffective2d THEN 1 ELSE 0 END ) END ) ELSE 1 END ) ELSE 1 END
  AND ISNULL(S.bNonPHA,0) =0
  AND NOT EXISTS(SELECT 1 FROM H8TENANT H8T WHERE H8T.hTenant1 = T.hMyPerson)
  AND ISNULL(xRef.bExclude,0) = 0
  #CONDITIONS#


  ORDER BY
  Year(Case When Comp58.dtNextEffective2d between '#dtFrom#' and '#dtTo#' Then Comp58.dtNextEffective2d
                       When Comp58.dtNextEffectiveFlat between '#dtFrom#' and '#dtTo#' Then Comp58.dtNextEffectiveFlat Else Null
                  End),
  Month(Case When Comp58.dtNextEffective2d between '#dtFrom#' and '#dtTo#' Then Comp58.dtNextEffective2d
       When Comp58.dtNextEffectiveFlat between '#dtFrom#' and '#dtTo#' Then Comp58.dtNextEffectiveFlat Else Null
  End),
  CASE WHEN '#SortOrd#' = 'Tenant Name' THEN rtrim(T.sLastName) +', ' +LTRIM(RTRIM(T.sFIRSTNAME))
			 WHEN '#SortOrd#' = 'Tenant Code' THEN T.sCode
			 WHEN '#SortOrd#' = 'Program' THEN
					CASE WHEN S.sProgram1d = 'P' THEN 'Public Housing'
						 WHEN S.sProgram1d = 'CE' THEN 'Section 8 Certificate'
						 WHEN S.sProgram1d = 'VO' THEN 'Section 8 Voucher'
						 WHEN S.sProgram1d = 'MR' THEN 'Mod Rehab'
						 WHEN S.sProgram1d = 'B' THEN 'Indian Housing'
						 WHEN S.sProgram1d = 'H' THEN 'Homeownership'
						 WHEN S.sProgram1d = 'PV' THEN 'Project Based Voucher'
						 ELSE 'Unk'
					END
			WHEN '#SortOrd#' = 'Caseworker' THEN 'Caseworker:' + CASE WHEN LEN(LTRIM(RTRIM(E.uLastName))) > 0 THEN E.uLastName + ', ' + E.sFirstName ELSE 'Unknown' END
			WHEN '#SortOrd#' = 'Property' THEN P.sCode
			WHEN '#SortOrd#' = 'Tenant Status' THEN St.Status
			ELSE T.sCode END ,
			rtrim(T.sLastName) +', '+ rtrim(T.sFirstName)
//end select

//GRID PropDet
Select
 S.sProgram1d Program,
 T.sCode TsCode,
 rtrim(T.sLastName)+','+rtrim(T.sFirstName) TName,
 P.sCode PsCode,
 U.sCode UsCode,
 St.Status Status,
 Case When rtrim(rtrim(E.sFirstName) + ' ' + rtrim(E.uLastName))='' Then 'us' else rtrim(rtrim(E.sFirstName) + ' ' + rtrim(E.uLastName)) End Caseworker
 From  H8Summ S
      inner JOIN h8Vouch Review58vouch ON (S.hMy = Review58vouch.hsum)
      Join Tenant T On T.hMyPerson = S.hTenant AND S.bMasterRecd = -1
      Join Property P On P.hMy = S.hProp and T.hProperty = P.hMy
      Join Unit U On T.hUnit = U.hMy
      JOIN H8Summ Last58 ON Last58.hTenant = T.hMyperson
      JOIN (SELECT MAX (ISNULL(H.sCerts, '')) sCerts, hTenant
             FROM H8SUMM H
             WHERE  H.dtEffective2b <= '01-Jan-2100'
             AND CHARINDEX(H.sActionType2a, '123456789ABCDEF') <> 0
             AND H.sCerts <> ''
             GROUP BY H.hTenant) t1 ON Last58.hTenant = t1.hTenant AND Last58.sCerts = t1.sCerts
      JOIN H8Summ Comp58 ON Comp58.hTenant = T.hMyperson
      JOIN (SELECT MAX (ISNULL(H.sCerts, '')) sCerts, hTenant
             FROM H8SUMM H
             WHERE  H.dtEffective2b <= '01-Jan-2100'
             AND CHARINDEX(H.sActionType2a, '12345679CE') <> 0
             AND H.sCerts <> ''
             GROUP BY H.hTenant) t2 ON Comp58.hTenant = t2.hTenant AND Comp58.sCerts = t2.sCerts
      Join TenStatus St On St.iStatus = T.iStatus
      Join H8Param PHA On PHA.hChart = 0
      Left Join Addr A On A.hPointer = U.hMy and A.iType = 4
      Left Join H8Unit H8U On H8U.hUnit = U.hMy
      Left Join Person O On O.hMy = Case isNull(H8U.hVendorLtr, 0) When 0 Then H8U.hVendor Else H8U.hVendorLtr End
      Left Join Person E On E.hMy = S.hCaseworker And E.iPersonType = 79
      Left Join (Select hSum, iBedroom11a iBeds, 'CE' sProgram From H8Certif
                Union
                Select hSum, iBedroom12a iBeds, 'VO' sProgram From H8Vouch) V On V.hSum = S.hMy and V.sProgram = S.sProgram1d
Where Comp58.sActionType2a Not In ('5', '6')
  and S.sProgram1d = Case '#s.Program#'
                          When 'Voucher'               Then 'VO'
                          When 'Certificate'           Then 'CE'
                          When 'Public Housing'        Then 'P'
                          When 'MOD Rehab'             Then 'MR'
                          When 'Homeownership'         Then 'H'
                          When 'Project Based Voucher' Then 'PV'
                          Else S.sProgram1d
                     End
  and S.sFSS2e = Case '#s.Program#' When 'FSS' Then 'Y' Else S.sFSS2e End
  and ((1 = Case When 'Re-Examinations' In ('#RecertType#') Then Case When Comp58.dtNextEffective2d between '#dtFrom#' and '#dtTo#' Then 1 Else 0 End
                 Else 0
            End) Or
       (1 = Case When 'Flat Rent Updates' In ('#RecertType#') Then Case When Comp58.dtNextEffectiveFlat between '#dtFrom#' and '#dtTo#' Then 1 Else 0 End
                 Else 0
            End) Or
       (1 = Case When 'Re-Examinations' Not In ('#RecertType#') and 'Flat Rent Updates' Not In ('#RecertType#') Then
                      Case When (Comp58.dtNextEffectiveFlat between '#dtFrom#' and '#dtTo#') or
                                (Comp58.dtNextEffective2d between '#dtFrom#' and '#dtTo#') Then 1
                           Else 0
                      End
                 Else 0
            End)
      )
  AND 1 = Case When ('Re-Examinations' In ('#RecertType#') OR '' IN ('#RecertType#')) Then ( CASE WHEN Comp58.dtleaseend IS NOT NULL THEN ( CASE WHEN LAST58.sactiontype2a = 'A' THEN 1 ELSE ( CASE WHEN Comp58.dtleaseend > comp58.dtnexteffective2d THEN 1 ELSE 0 END ) END ) ELSE 1 END ) ELSE 1 END
  AND ISNULL(S.bNonPHA,0) =0
  AND NOT EXISTS(SELECT 1 FROM H8TENANT H8T WHERE H8T.hTenant1 = T.hMyPerson)
  #CONDITIONS#


  ORDER BY
  Year(Case When Comp58.dtNextEffective2d between '#dtFrom#' and '#dtTo#' Then Comp58.dtNextEffective2d
                       When Comp58.dtNextEffectiveFlat between '#dtFrom#' and '#dtTo#' Then Comp58.dtNextEffectiveFlat Else Null
                  End),
  Month(Case When Comp58.dtNextEffective2d between '#dtFrom#' and '#dtTo#' Then Comp58.dtNextEffective2d
       When Comp58.dtNextEffectiveFlat between '#dtFrom#' and '#dtTo#' Then Comp58.dtNextEffectiveFlat Else Null
  End),
  CASE WHEN '#SortOrd#' = 'Tenant Name' THEN rtrim(T.sLastName) +', ' +LTRIM(RTRIM(T.sFIRSTNAME))
			 WHEN '#SortOrd#' = 'Tenant Code' THEN T.sCode
			 WHEN '#SortOrd#' = 'Program' THEN
					CASE WHEN S.sProgram1d = 'P' THEN 'Public Housing'
						 WHEN S.sProgram1d = 'CE' THEN 'Section 8 Certificate'
						 WHEN S.sProgram1d = 'VO' THEN 'Section 8 Voucher'
						 WHEN S.sProgram1d = 'MR' THEN 'Mod Rehab'
						 WHEN S.sProgram1d = 'B' THEN 'Indian Housing'
						 WHEN S.sProgram1d = 'H' THEN 'Homeownership'
						 WHEN S.sProgram1d = 'PV' THEN 'Project Based Voucher'
						 ELSE 'Unk'
					END
			WHEN '#SortOrd#' = 'Caseworker' THEN 'Caseworker:' + CASE WHEN LEN(LTRIM(RTRIM(E.uLastName))) > 0 THEN E.uLastName + ', ' + E.sFirstName ELSE 'Unknown' END
			WHEN '#SortOrd#' = 'Property' THEN P.sCode
			WHEN '#SortOrd#' = 'Tenant Status' THEN St.Status
			ELSE T.sCode END ,
			rtrim(T.sLastName) +', '+ rtrim(T.sFirstName)
//End Select

//FORMAT
AgencyAddressLine Multiline
TenAddressLine Multiline
OwnAddressLine Multiline
LetterDate MMM DD, YYYY
LetterDateS DD/MM/YYYY
LetterDateShort MM/YY
dtNextEffective MM/DD/YYYY
daysplus10 MM/DD/YYYY
daysplus20 MM/DD/YYYY
daysMinus60 MM/DD/YYYY
daysMinus30 MM/DD/YYYY
dtNextEffectiveS DD/MM/YYYY
daysplus10S DD/MM/YYYY
daysMinus60S DD/MM/YYYY
daysMinus30S DD/MM/YYYY
strMonth MMMM
ExecutionTime DDDD,MMMM DD,YYYY
//END FORMAT

//Filter
//Type, DataTyp,         Name,              Caption, Key,                                                                                  List,                                                                    Val1, Val2, Mandatory,Multi-Type, Title Title
     C,       T,        PRhMy,             Property,    ,                                                                                    61,                                                         P.hMy = #PRhMy#,     ,          ,          ,      ,,,,
     C,       T,      t.hUnit,                 Unit,    ,                                                                                     4,                                                     T.hUnit = #t.hUnit#,     ,          ,          ,      ,  Y,  , , ,
     C,       T,  t.hMyPerson,               Tenant,    ,                                                                                     1,                                             T.hMyPerson = #t.hMyPerson#,     ,          ,          ,     Y,   ,  , , ,
     M,       T,    t.iStatus,               Status,    ,                    ^Current^Past^Future^Eviction^Notice, st.status in ('#t.iStatus#'),                                                                        ,     ,          ,         Y,      ,   ,  , ,
     C,       T,        e.hMy,           Caseworker,    ,                                                                                    79,                                                         E.hMy = #e.hMy#,     ,          ,          ,     Y,   ,
     L,       T,    s.Program,              Program,    , ^Voucher^Public Housing^MOD Rehab^Homeownership^Project Based Voucher^Certificate^FSS,                                                                        ,     ,          ,          ,      ,
     R,       A,  dtFrom:dtTo,  Reexams Due Between,    ,                                                                                      ,                                                                        ,     ,         Y,          ,      ,
     M,       T,   RecertType, Recertification Type,    ,                                                    ^Re-Examinations^Flat Rent Updates,                                                                        ,     ,          ,          ,      ,
     L,       T,      SortOrd,           Sort Order,    ,        ^Tenant Name^Tenant Code^Tenant Status^Program^Caseworker^Property^,                                                                        ,     ,          ,          ,      ,
     L,       T,      RptType,          Report Type,    ,                     Tenant Letter^Owner Letter^,                                                                        ,     ,          ,          ,      ,
//End Filter
