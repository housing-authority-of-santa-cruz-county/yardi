//Vista

//Notes
  Copyright (c) 2003 by Yardi Systems
  NAME
    adhocs_adhocs_ins_sha_failed_reinspection.txt
  DESCRIPTION

  NOTES
    Adhoc Report (SQL Server)
  MODIFIED
    06/05/2019 - Created by jonathan
    06/05/2019 - Last Modified by jonathan
//End Notes

//Database
FillDocs
//End Database

//Options
OutPutToPDF
//End Options

//Title
INS SHA Failed Re-Inspection
//End Title

//Select Primary
 SELECT  'y_INS_SHA_Failed_ReInspection_3.docx' _FILE_
 ,'\\asp1\bfs\busersdefpaths\Housing Authority of t 85430\Live\Reports\header_image.jpg'    headerImage,
                 rsc.chairperson                             chairperson,
                 rsc.viceChairperson                         viceChairperson,
                 rsc.boardmember1                            boardmember1,
                 rsc.boardmember2                            boardmember2,
                 rsc.boardmember3                            boardmember3,
                 rsc.boardmember4                            boardmember4,
                 rsc.boardmember5                            boardmember5,
                 rsc.execDirector                            execDirector
              , unit.sCode 'UnitCode'
              , GETDATE() 'PrintDate'
              , INSP.dtInspected 'InsptDate'
              , DATEADD(week, 4, INSP.dtInspected) 'ExtDate'
              , DATEADD(week, 5, INSP.dtInspected) 'PassDate'
              , UAddr.sAddr1 'HHAddress1'
              , case when isnull(UnitOwnerperson.saddr1, '') <> '' then ltrim(rtrim(UnitOwnerperson.saddr1))  + char(13)+char(10) else '' end + case when isnull(UnitOwnerperson.saddr2, '') <> '' then ltrim(rtrim(UnitOwnerperson.saddr2))  + char(13)+char(10) else '' end + case when isnull(UnitOwnerperson.sCity, '') <> '' then ltrim(rtrim(UnitOwnerperson.sCity)) else '' end + case when isnull(UnitOwnerperson.sState, '') = '' and isnull(UnitOwnerperson.sZipCode, '') = '' then ltrim(rtrim(UnitOwnerperson.sState)) + ' ' + ltrim(rtrim(UnitOwnerperson.SZIPCODE)) else ', ' + ltrim(rtrim(UnitOwnerperson.sState)) + ' ' + ltrim(rtrim(UnitOwnerperson.SZIPCODE)) end 'HHAddress'
              , LTrim(RTrim(IsNull(UnitOwnerperson.sFirstName, '') + CASE When IsNull(UnitOwnerperson.sFirstName, '') = IsNull(UnitOwnerperson.uLastName, '') Then '' Else ' ' + IsNull(UnitOwnerperson.uLastName, '') END)) HHName
 FROM  Property p  INNER JOIN Unit ON (p.hMy = unit.hProperty)
 INNER JOIN H8Unit  ON (Unit.hMy = H8Unit.hUnit)
 LEFT JOIN Vendor UnitOwner ON (UnitOwner.hMyPerson = H8Unit.hVendor)
 LEFT JOIN person UnitOwnerperson ON (UnitOwner.hMyPerson = UnitOwnerperson.hMy)  AND (UnitOwnerperson.iPersonType = 5)
 LEFT JOIN addr UAddr ON (unit.hMy = UAddr.hPointer)  AND (UAddr.iType = 4)
 LEFT JOIN Inspection2 insp ON (unit.hMy = insp.hPointer)  AND (insp.iTYpe = 4)
 INNER JOIN insp_inspectiontype inspt ON (insp.hInspType = inspt.hmy)
 cross join board_commishes_footer_RSC rsc
 WHERE 1 = 1
 AND p.itype = 3
 #conditions#
 ORDER BY INSP.dtInspected DESC
//End Select Primary

//Format
PrintDate MMMM DD, YYYY
InsptDate MMMM DD, YYYY
PassDate  MMMM DD, YYYY
ExtDate   MMMM DD, YYYY
//End Format

//Filter
//Type, DataTyp,Name,           Caption,        Key,    List,                   Val1,             Val2, Mandatory,Multi-Type, Title
C    ,T    ,"p.hMy"    ,"Property"    ,  ,"61"    ,"p.hMy = #p.hMy# "    ,     ,N    ,   ,Y
0    ,T    ,"Field110"    ,"Unit"    ,  ,"4"    ,"unit.sCode  IN  ('#Field110#') ",     ,N    ,   ,Y
//End Filter
